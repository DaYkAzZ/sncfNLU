const knex = require('./db');
const bcrypt = require('bcrypt');
const jwt = require('jsonwebtoken');
const readline = require('readline-sync');

const SECRET_KEY = "secret123"; // üî• √Ä s√©curiser avec dotenv

let currentUser = null;

// üîπ Fonction d'inscription
async function register() {
    const nom = readline.question("Nom : ");
    const prenom = readline.question("Pr√©nom : ");
    const email = readline.question("Email : ");
    const password = readline.question("Mot de passe : ", { hideEchoBack: true });

    const hashedPassword = await bcrypt.hash(password, 10);

    try {
        await knex('Usagers').insert({ nom, prenom, email, password: hashedPassword });
        console.log('‚úÖ Inscription r√©ussie !');
    } catch (error) {
        console.error('‚ùå Erreur lors de l\'inscription. Cet email est peut-√™tre d√©j√† utilis√©.');
    }
}

// üîπ Fonction de connexion
async function login() {
    const email = readline.question("Email : ");
    const password = readline.question("Mot de passe : ", { hideEchoBack: true });

    const user = await knex('Usagers').where({ email }).first();

    if (!user || !(await bcrypt.compare(password, user.password))) {
        return console.log("‚ùå Identifiants incorrects.");
    }

    const token = jwt.sign({ id: user.id }, SECRET_KEY, { expiresIn: '1h' });
    currentUser = { id: user.id, email, token };
    console.log(`‚úÖ Connect√© en tant que ${email}`);
}

// üîπ Afficher les trains disponibles
async function listTrains() {
    const trains = await knex('Trains')
        .join('Lignes', 'Trains.ligne_id', '=', 'Lignes.id')
        .select('Trains.id', 'Trains.number', 'Trains.depart', 'Trains.arrivee', 'Trains.seats', 'Lignes.nom as ligne');

    if (trains.length === 0) {
        return console.log("üöÜ Aucun train disponible.");
    }

    console.log("\nüìã Liste des trains :");
    trains.forEach(train => {
        console.log(`üõ§Ô∏è Train ${train.id} (${train.number}) - ${train.ligne} : ${train.depart} ‚Üí ${train.arrivee} (${train.seats} places)`);
    });
}

// üîπ R√©server un billet
async function reserveTicket() {
    if (!currentUser) return console.log("‚ö†Ô∏è Vous devez √™tre connect√©.");

    await listTrains();
    const trainId = readline.questionInt("ID du train √† r√©server : ");
    const seat = readline.questionInt("Num√©ro de si√®ge : ");
    const prix = readline.question("Prix du billet : ");

    try {
        await knex('Billets').insert({
            usager_id: currentUser.id,
            train_id: trainId,
            seat,
            prix
        });
        console.log("üéüÔ∏è Billet r√©serv√© !");
    } catch (error) {
        console.error("‚ùå Erreur lors de la r√©servation.");
    }
}

// üîπ Voir les r√©servations de l'utilisateur
async function listReservations() {
    if (!currentUser) return console.log("‚ö†Ô∏è Vous devez √™tre connect√©.");

    const reservations = await knex('Billets')
        .join('Trains', 'Billets.train_id', '=', 'Trains.id')
        .select('Trains.number', 'Trains.depart', 'Trains.arrivee', 'Billets.seat', 'Billets.prix')
        .where('Billets.usager_id', currentUser.id);

    if (reservations.length === 0) return console.log("üì≠ Aucune r√©servation.");

    console.log("\nüéüÔ∏è Vos r√©servations :");
    reservations.forEach(r => {
        console.log(`üöÜ Train ${r.number} : ${r.depart} ‚Üí ${r.arrivee} | Si√®ge : ${r.seat} | Prix : ${r.prix}‚Ç¨`);
    });
}

async function myProfile() {
  if (!currentUser) return console.log("‚ö†Ô∏è Vous devez √™tre connect√© pour consulter votre profil. Tapez 2Ô∏è‚É£ pour vous connecter ou 1Ô∏è‚É£ pour vous inscrire.");
  const user = await knex('Usagers').where({ id: currentUser.id }).first();
  console.log(`=========================\nüöπ Bienvenue sur votre profil ${user.prenom} \nNom : ${user.nom}\nPrenom : ${user.prenom}\nEmail : ${user.email}\n=========================`);
  
}

// üîπ Menu CLI
async function mainMenu() {
    while (true) {
        console.log("\n=== MENU ===");
        console.log("1Ô∏è‚É£ Inscription");
        console.log("2Ô∏è‚É£ Connexion");
        console.log("3Ô∏è‚É£ Afficher les trains");
        console.log("4Ô∏è‚É£ R√©server un billet");
        console.log("5Ô∏è‚É£ Mes r√©servations");
        console.log("6Ô∏è‚É£ Afficher mon profil");
        console.log("7Ô∏è‚É£ Quitter");

        const choix = readline.questionInt("Votre choix : ");

        switch (choix) {
            case 1:
                await register();
                break;
            case 2:
                await login();
                break;
            case 3:
                await listTrains();
                break;
            case 4:
                await reserveTicket();
                break;
            case 5:
                await listReservations();
                break;
            case 6:
                await myProfile();
                break;
            case 7:
                console.log("üëã Au revoir !");
                process.exit(0);
            default:
                console.log("‚ö†Ô∏è Choix invalide !");
        }
    }
}

mainMenu();
